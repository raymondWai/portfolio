{"version":3,"sources":["constants/theme.ts","constants/locale.ts","constants/localStorageKey.ts","store/ui.ts","store/index.ts","themes/dark.ts","themes/white.ts","components/Demo.tsx","containers/Demo.tsx","constants/resumeData.ts","components/Home.tsx","hooks/useWindowSize.ts","utils/getDisplayType.ts","containers/Home.tsx","components/Sidebar.tsx","containers/Sidebar.tsx","components/RadioInput.tsx","constants/route.tsx","components/StyledSwitch.tsx","components/CircleBox.ts","components/Header.tsx","containers/Header.tsx","layouts/BasicLayout.tsx","App.tsx","reportWebVitals.ts","utils/i18n.ts","index.tsx"],"names":["ThemeEnum","Locale","LocalStorageKey","UIStore","theme","locale","sidebarCollapse","makeAutoObservable","this","localStorage","getItem","Theme","Dark","EN","UIContext","createContext","DarkTheme","palette","primary","main","blue","light","dark","contrastText","secondary","text","background","default","dimension","header","sidebar","WhiteTheme","Demo","props","DemoContainer","memo","sections","personalInfos","position","duration","company","description","workExperiences","educations","skills","languages","HomePageContainer","forwardRef","ref","children","restProps","Grid","StyledStepLabel","styled","StepLabel","stepLabelClasses","label","color","Home","resumeEntries","expanded","activeSection","t","onExpand","onTitleClick","onSectionClick","useTheme","stepperContainerRef","useRef","stepperRef","useState","displayType","setDisplayType","size","setSize","updateSize","window","innerWidth","innerHeight","useLayoutEffect","addEventListener","removeEventListener","useWindowSize","windowHeight","useEffect","container","element","current","clientHeight","direction","component","sx","height","item","xs","justifyContent","alignContent","flexGrow","paddingLeft","maxHeight","overflowY","display","Stepper","orientation","activeStep","maxWidth","map","step","index","Step","optional","Typography","StepIconComponent","onClick","e","StepContent","borderLeft","marginLeft","section","Button","marginBottom","textAlign","opacity","HomeContainer","useTranslation","exp","setResumeEntries","setActiveSection","useMemo","filter","entry","length","useCallback","newEntries","newSection","findIndex","personalInfo","education","skill","language","StyledItemButton","ListItemButton","listItemButtonClasses","selected","backgroundColor","RouteItem","name","collapse","icon","ListItemIcon","width","minWidth","ListItemText","margin","marginTop","Sidebar","location","history","routes","Object","values","Routes","route","pathname","RouteKeyMap","path","push","List","aria-label","disablePadding","dense","bgcolor","observer","useLocation","useHistory","uiStore","useContext","getSidebarCollapse","RowFormControl","FormControl","flexDirection","marginHorizontal","VCenterLabel","typographyClasses","root","alignSelf","marginRight","RadioInput","onChange","options","value","title","memoOptions","option","FormControlLabel","control","Radio","checked","translation","RadioGroup","row","Switch","switchClasses","switchBase","paddingTop","Box","borderRadius","alignItems","zIndex","StyledAppbar","AppBar","minHeight","StyledToolbar","Toolbar","toolbarClasses","WhiteThemeIcon","WbSunnyIcon","Header","handleLocaleChange","handleThemeChange","handleCollapseBtnClick","themeSwitchRef","IconButton","transformOrigin","transform","Stack","spacing","White","StyledSwitch","inputRef","checkedIcon","CircleBox","click","i18n","changeLanguage","target","setItem","setLocale","setTheme","setSidebarCollapse","getLocale","getTheme","Background","BasicLayout","flexWrap","renderRoutes","lineHeight","routeConfig","exact","key","responsiveFontSizes","createTheme","ThemeProvider","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","ns","defaultNS","debug","interpolation","escapeValue","backend","loadPath","supportedLngs","ZH","ReactDOM","render","StrictMode","Provider","fallback","I18nextProvider","document","getElementById"],"mappings":"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","file":"static/js/main.05c09a08.chunk.js","sourcesContent":["enum ThemeEnum {\n    Dark = 'dark',\n    White = 'white',\n}\n\nexport default ThemeEnum;\n","enum Locale {\n    EN = \"en-US\",\n    ZH = \"zh-HK\"\n}\nexport default Locale;","enum LocalStorageKey {\n    Theme = 'theme',\n    Locale = 'locale'\n}\nexport default LocalStorageKey","import { makeAutoObservable } from 'mobx';\nimport Locale from '../constants/locale';\nimport LocalStorageKey from '../constants/localStorageKey';\nimport Theme from '../constants/theme';\n\nexport default class UIStore {\n    theme: Theme;\n    locale: Locale;\n    sidebarCollapse: boolean;\n\n    constructor() {\n        makeAutoObservable(this);\n        const theme = localStorage.getItem(LocalStorageKey.Theme);\n        const locale = localStorage.getItem(LocalStorageKey.Locale);\n        this.theme = (theme ? theme : Theme.Dark) as Theme;\n        this.locale = (locale ? locale : Locale.EN) as Locale;\n        this.sidebarCollapse = false;\n    }\n    get getTheme(): Theme {\n        return this.theme;\n    }\n    get getLocale(): Locale {\n        return this.locale;\n    }\n    get getSidebarCollapse(): boolean {\n        return this.sidebarCollapse\n    }\n\n    setTheme(theme: Theme): void {\n        this.theme = theme;\n    }\n    setLocale(locale: Locale): void {\n        this.locale = locale;\n    }\n    setSidebarCollapse(sidebarCollapse: boolean): void {\n        this.sidebarCollapse = sidebarCollapse\n    }\n}\n","import { createContext } from \"react\";\nimport UIStore from \"./ui\";\n\nexport const UIContext = createContext<UIStore>(new UIStore())","import { blue } from '@mui/material/colors';\nimport { CustomTheme } from './type';\n\nconst DarkTheme: CustomTheme = {\n    palette: {\n        primary: {\n            main: blue[400],\n            light: blue[300],\n            dark: blue[800],\n            contrastText: '#ffffff',\n        },\n        secondary: {\n            main: '#fdf100',\n            light: '#f9f395',\n            dark: '#ded502',\n            contrastText: '#000000',\n        },\n        text: {\n            primary: '#ffffff',\n            secondary: '#161616',\n        },\n        background: {\n            default: '#161616',\n        },\n    },\n    dimension: {\n        header: '3rem',\n        sidebar: '10rem',\n    },\n};\nexport default DarkTheme;\n","import { CustomTheme } from './type';\n\nconst WhiteTheme: CustomTheme = {\n    palette: {\n        primary: {\n            main: '#3fb550',\n            light: '#8ff1a4',\n            dark: '#3ab14c',\n            contrastText: '#ffffff',\n        },\n        secondary: {\n            main: '#0024fd',\n            light: '#7a82f3',\n            dark: '#0a22b3',\n            contrastText: '#ffffff',\n        },\n        text: {\n            primary: '#161616',\n            secondary: '#e0dede',\n        },\n        background: {\n            default: '#e0dede',\n        },\n    },\n    dimension: {\n        header: '3rem',\n        sidebar: '10rem',\n    },\n};\nexport default WhiteTheme;\n","import React from 'react';\n\ninterface DemoProps {}\nconst Demo = (props: DemoProps) => {\n    return <div></div>;\n};\nexport default Demo;\n","import React, { memo } from 'react';\nimport Demo from 'src/components/Demo';\ninterface DemoProps {}\nconst DemoContainer = (props: DemoProps) => {\n    return <Demo />;\n};\nexport default memo(DemoContainer);\n","export const sections = [\n    'personal_info',\n    'work_experience',\n    'education',\n    'skills',\n    'languages',\n];\n\nexport interface ResumeEntryType {\n    position: string;\n    duration: string;\n    company: string;\n    description: string;\n}\n\nexport const personalInfos: Array<ResumeEntryType> = [\n    {\n        position: 'Man Ho Wai',\n        duration: 'Mr.',\n        company: 'waimanho2765galois@gmail.com',\n        description: '6475635796',\n    },\n    {\n        position: 'Finch ave E',\n        duration: 'North York',\n        company: 'Ontario',\n        description: '',\n    },\n];\n\nexport const workExperiences: Array<ResumeEntryType> = [\n    {\n        position: 'Software Engineer(Associate)',\n        duration: 'May 2019 - Oct 2021',\n        company: 'EGUSI',\n        description:\n            'Develop web/app/back-end from scratch or take over from other teams \\\n            Debugging Create maintaining doc',\n    },\n    {\n        position: 'Software Engineer',\n        duration: 'Oct 2020 - Apr 2020',\n        company: 'MFinance',\n        description:\n            'Responsible for developing a full function stock trading web app with \\\n            real-time chart rendering, order management(create, amend, cancel, show \\\n                history), IPO(list, detail, apply, amend, cancel), News, account \\\n                management',\n    },\n    {\n        position: 'Software Engineer',\n        duration: 'Apr 2020 - Oct 2021',\n        company: 'Siemens',\n        description:\n            'Develop and Debug a ticket management system. Migrate the auto CI/CD \\\n            system from local server to aws and integrated with eks, alb and s3. \\\n            Added multi-node capability to the system. Communicate with the client \\\n            to confirm some change request and provide estimation of task.',\n    },\n];\n\nexport const educations: Array<ResumeEntryType> = [\n    {\n        position: \"Bachelor's Degree in Physics\",\n        duration: 'HKUST',\n        company: 'Sep 2016 - Feb 2020',\n        description:\n            'Major in Physics and Minor in Cosmology while my capstone is about Machine Learning.',\n    },\n];\n\nexport const skills: Array<ResumeEntryType> = [\n    {\n        position: 'Typescript',\n        duration: '3 yrs',\n        company: '',\n        description: '',\n    },\n    {\n        position: 'React.js',\n        duration: '3 yrs',\n        company: '',\n        description: '',\n    },\n    {\n        position: 'Express',\n        duration: '2 yrs',\n        company: '',\n        description: '',\n    },\n    {\n        position: 'React Native',\n        duration: '3 yr',\n        company: '',\n        description: '',\n    },\n    {\n        position: 'AngularJs',\n        duration: '1 yr',\n        company: '',\n        description: '',\n    },\n    {\n        position: 'Next.js',\n        duration: '1 yr',\n        company: '',\n        description: '',\n    },\n    {\n        position: 'MongoDB',\n        duration: '1 yr',\n        company: '',\n        description: '',\n    },\n    {\n        position: 'MySQL',\n        duration: '1 yrs',\n        company: '',\n        description: '',\n    },\n    {\n        position: 'Laravel',\n        duration: '2 yrs',\n        company: '',\n        description: '',\n    },\n    {\n        position: 'Redis',\n        duration: '1 yr',\n        company: '',\n        description: '',\n    },\n    {\n        position: 'Aws',\n        duration: '1 yr',\n        company: '',\n        description: '',\n    },\n    {\n        position: 'Python',\n        duration: '2 yr',\n        company: '',\n        description: '',\n    },\n];\nexport const languages: Array<ResumeEntryType> = [\n    {\n        position: 'Cantonese',\n        duration: 'Native',\n        company: '',\n        description: '',\n    },\n    {\n        position: 'English',\n        duration: 'Intermediate',\n        company: '',\n        description: '',\n    },\n    {\n        position: 'Japanese',\n        duration: 'Intermediate',\n        company: '',\n        description: '',\n    },\n];\n","import React, {\n    forwardRef,\n    Ref,\n    RefObject,\n    MouseEvent,\n    useRef,\n    useState,\n    useEffect,\n} from 'react';\nimport {\n    Button,\n    Grid,\n    GridTypeMap,\n    Step,\n    StepContent,\n    StepLabel,\n    stepLabelClasses,\n    Stepper,\n    Typography,\n} from '@mui/material';\nimport { DefaultComponentProps } from '@mui/material/OverridableComponent';\nimport { ResumeEntryType, sections } from 'src/constants/resumeData';\nimport { styled, useTheme } from '@mui/styles';\nimport { TFunction } from 'react-i18next';\nimport InfoIcon from '@mui/icons-material/Info';\nimport { getDisplayType } from 'src/utils/getDisplayType';\nimport { useWindowSize } from 'src/hooks/useWindowSize';\n\nconst HomePageContainer = forwardRef<\n    RefObject<HTMLDivElement>,\n    DefaultComponentProps<GridTypeMap<{}, 'div'>> & { component: 'div' }\n>(({ children, ...restProps }, ref) => (\n    <Grid {...restProps} ref={ref as RefObject<HTMLDivElement>}>\n        {children}\n    </Grid>\n));\n\nconst StyledStepLabel = styled(StepLabel)(({ theme }) => ({\n    [`& .${stepLabelClasses.label}`]: {\n        color: `${theme.palette.secondary.main} !important`,\n    },\n}));\ninterface HomeProps {\n    expanded: boolean;\n    resumeEntries: Array<ResumeEntryType & { expanded: boolean }>;\n    activeSection: number;\n    t: TFunction;\n    onExpand: (e: MouseEvent<HTMLButtonElement>) => void;\n    onTitleClick: (e: MouseEvent<HTMLDivElement>, index: number) => void;\n    onSectionClick: (section: string) => void;\n}\nconst Home = ({\n    resumeEntries,\n    expanded,\n    activeSection,\n    t,\n    onExpand,\n    onTitleClick,\n    onSectionClick,\n}: HomeProps) => {\n    const theme = useTheme();\n\n    const stepperContainerRef = useRef<HTMLDivElement>(null);\n    const stepperRef = useRef<HTMLDivElement>(null);\n    const [displayType, setDisplayType] = useState('flex');\n    const [_, windowHeight] = useWindowSize();\n\n    useEffect(() => {\n        setDisplayType(getDisplayType(stepperContainerRef, stepperRef));\n    }, [windowHeight, setDisplayType, stepperContainerRef, stepperRef]);\n    return (\n        <HomePageContainer\n            container\n            direction={'row'}\n            component='div'\n            sx={{\n                height: '100%',\n            }}\n        >\n            <Grid\n                item\n                container\n                xs={9}\n                justifyContent={'flex-start'}\n                alignContent={'center'}\n                flexGrow={1}\n                sx={{\n                    paddingLeft: '5%',\n                    maxHeight: 'max(12rem, 100vh - 5rem)',\n                    overflowY: 'scroll',\n                    display: displayType,\n                }}\n                ref={stepperContainerRef}\n            >\n                <Stepper\n                    orientation='vertical'\n                    activeStep={-1}\n                    sx={{\n                        maxWidth: '80%',\n                    }}\n                    ref={stepperRef}\n                >\n                    {resumeEntries.map((step, index) => (\n                        <Step key={index} expanded={step.expanded}>\n                            <StyledStepLabel\n                                optional={\n                                    <Grid item container direction={'column'}>\n                                        <Typography\n                                            sx={{\n                                                color: 'secondary.light',\n                                            }}\n                                        >\n                                            {step.company}\n                                        </Typography>\n                                        <Typography\n                                            sx={{\n                                                color: 'secondary.light',\n                                            }}\n                                        >\n                                            {step.duration}\n                                        </Typography>\n                                    </Grid>\n                                }\n                                StepIconComponent={(props) => (\n                                    <InfoIcon sx={{ color: 'primary.main' }} />\n                                )}\n                                onClick={(e: MouseEvent<HTMLDivElement>) =>\n                                    onTitleClick(e, index)\n                                }\n                            >\n                                {step.position}\n                            </StyledStepLabel>\n                            <StepContent>{step.description}</StepContent>\n                        </Step>\n                    ))}\n                </Stepper>\n            </Grid>\n            <Grid\n                item\n                container\n                direction='column'\n                justifyContent={'space-between'}\n                xs={3}\n                sx={{\n                    borderLeft: `0.1rem solid ${theme.palette.primary.main}`,\n                }}\n            >\n                <Stepper\n                    orientation='vertical'\n                    activeStep={activeSection}\n                    sx={{\n                        marginLeft: '0.5rem',\n                    }}\n                >\n                    {sections.map((section, index) => (\n                        <Step\n                            key={index}\n                            onClick={() => onSectionClick(section)}\n                        >\n                            <StyledStepLabel>\n                                {t(`general:${section}`)}\n                            </StyledStepLabel>\n                        </Step>\n                    ))}\n                </Stepper>\n                <Button\n                    sx={{\n                        marginBottom: '0.5rem',\n                        marginLeft: '0.5rem',\n                        textAlign: 'right',\n                        justifyContent: 'flex-start',\n                        opacity: activeSection !== 0 ? 1 : 0,\n                    }}\n                    onClick={onExpand}\n                >\n                    {t(`general:${expanded ? 'collapse_all' : 'expand_all'}`)}\n                </Button>\n            </Grid>\n        </HomePageContainer>\n    );\n};\nHome.propTypes = {};\nexport default Home;\n","import { useLayoutEffect, useState } from 'react';\n\nexport function useWindowSize() {\n    const [size, setSize] = useState([0, 0]);\n    function updateSize() {\n        setSize([window.innerWidth, window.innerHeight]);\n    }\n    useLayoutEffect(() => {\n        window.addEventListener('resize', updateSize);\n        return () => window.removeEventListener('resize', updateSize);\n    }, []);\n    return size;\n}\n","import { RefObject } from \"react\";\n\nexport const getDisplayType = (\n    container: RefObject<HTMLDivElement>,\n    element: RefObject<HTMLDivElement>\n) => {\n    if(container.current && element.current) {\n        if (container.current.clientHeight < element.current.clientHeight) {\n            return 'block'\n        }\n    }\n    return 'flex'\n};\n","import React, {\n    memo,\n    useCallback,\n    useRef,\n    useState,\n    MouseEvent,\n    useMemo,\n    useEffect,\n} from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { RouteProps } from 'react-router-dom';\nimport {\n    workExperiences,\n    sections,\n    personalInfos,\n    educations,\n    skills,\n    languages,\n} from 'src/constants/resumeData';\nimport Home from '../components/Home';\n\nconst HomeContainer = (props: RouteProps) => {\n    const { t } = useTranslation(['general']);\n    const [resumeEntries, setResumeEntries] = useState(\n        workExperiences.map((exp) => ({\n            ...exp,\n            expanded: false,\n        }))\n    );\n    const [activeSection, setActiveSection] = useState(0);\n    const expanded = useMemo(\n        () => resumeEntries.filter((entry) => !entry.expanded).length === 0,\n        [resumeEntries]\n    );\n\n    const onExpand = useCallback(\n        (e: MouseEvent<HTMLButtonElement>) => {\n            if (activeSection !== 0) {\n                setResumeEntries(\n                    resumeEntries.map((exp) => ({\n                        ...exp,\n                        expanded: !expanded,\n                    }))\n                );\n            }\n        },\n        [setResumeEntries, resumeEntries, expanded, activeSection]\n    );\n    const onTitleClick = useCallback(\n        (\n            e: MouseEvent<HTMLDivElement, globalThis.MouseEvent>,\n            index: number\n        ) => {\n            if (activeSection !== 0) {\n                const newEntries = [...resumeEntries];\n                newEntries[index].expanded = !newEntries[index].expanded;\n                setResumeEntries(newEntries);\n            }\n        },\n        [setResumeEntries, resumeEntries, activeSection]\n    );\n    const onSectionClick = useCallback(\n        (newSection: string) => {\n            setActiveSection(\n                sections.findIndex((section) => section === newSection)\n            );\n        },\n        [setActiveSection]\n    );\n\n    useEffect(() => {\n        switch (activeSection) {\n            case 0:\n                setResumeEntries(\n                    personalInfos.map((personalInfo) => ({\n                        ...personalInfo,\n                        expanded: true,\n                    }))\n                );\n                break;\n            case 1:\n                setResumeEntries(\n                    workExperiences.map((exp) => ({\n                        ...exp,\n                        expanded: true,\n                    }))\n                );\n                break;\n            case 2:\n                setResumeEntries(\n                    educations.map((education) => ({\n                        ...education,\n                        expanded: true,\n                    }))\n                );\n                break;\n            case 3:\n                setResumeEntries(\n                    skills.map((skill) => ({\n                        ...skill,\n                        expanded: true,\n                    }))\n                );\n                break;\n            case 4:\n                setResumeEntries(\n                    languages.map((language) => ({\n                        ...language,\n                        expanded: true,\n                    }))\n                );\n                break;\n            default:\n                return setResumeEntries([]);\n        }\n    }, [activeSection, setResumeEntries]);\n    return (\n        <Home\n            resumeEntries={resumeEntries}\n            expanded={expanded}\n            activeSection={activeSection}\n            onExpand={onExpand}\n            t={t}\n            onTitleClick={onTitleClick}\n            onSectionClick={onSectionClick}\n        />\n    );\n};\nexport default memo(HomeContainer);\n","import {\n    List,\n    ListItemButton,\n    listItemButtonClasses,\n    ListItemIcon,\n    ListItemText,\n} from '@mui/material';\nimport { Location } from 'history';\nimport React, { MouseEvent, useMemo } from 'react';\nimport { TFunction } from 'react-i18next';\nimport { RouteKeyMap, Routes } from 'src/constants/route';\nimport { styled } from '@mui/styles';\n\nconst StyledItemButton = styled(ListItemButton)(({ theme }) => ({\n    [`&.${listItemButtonClasses.selected}`]: {\n        backgroundColor: `${theme.palette.primary.light} !important`,\n        color: `${theme.palette.secondary.contrastText} !important`,\n        alignContent: 'center',\n        display: 'flex',\n    },\n}));\ninterface RouteItemProps {\n    onClick: (e: MouseEvent<HTMLDivElement>) => void;\n    selected: boolean;\n    name: string;\n    collapse: boolean;\n    icon: (props: { selected: boolean }) => JSX.Element;\n}\nconst RouteItem = ({\n    selected,\n    name,\n    collapse,\n    icon,\n    onClick,\n}: RouteItemProps) => {\n    return (\n        <StyledItemButton selected={selected} onClick={onClick}>\n            <ListItemIcon\n                sx={{\n                    width: 'fit-content',\n                    minWidth: 0,\n                }}\n            >\n                {icon({ selected })}\n            </ListItemIcon>\n            {!collapse && (\n                <ListItemText\n                    primary={name}\n                    sx={{\n                        margin: '0 0.5rem',\n                        marginTop: '0.2rem',\n                    }}\n                />\n            )}\n        </StyledItemButton>\n    );\n};\ninterface SidebarProps {\n    location: Location;\n    history: any;\n    collapse: boolean;\n    t: TFunction<('general' | 'route')[], undefined>;\n}\nconst Sidebar = ({ location, history, collapse, t }: SidebarProps) => {\n    const routes = useMemo(\n        () =>\n            Object.values(Routes).map((route, index) => {\n                return (\n                    <RouteItem\n                        selected={location.pathname === RouteKeyMap[route].path}\n                        name={t<string>(`routes:${route}`)}\n                        onClick={(e) => {\n                            history.push(RouteKeyMap[route].path);\n                        }}\n                        key={`${route}-${index}`}\n                        icon={RouteKeyMap[route].icon}\n                        collapse={collapse}\n                    />\n                );\n            }),\n        [t, location, history, collapse]\n    );\n    return (\n        <List\n            component='nav'\n            aria-label='routes'\n            disablePadding\n            dense\n            sx={{\n                bgcolor: '#404040',\n                flexGrow: 1,\n            }}\n        >\n            {routes}\n        </List>\n    );\n};\nexport default Sidebar;\n","import { observer } from 'mobx-react';\nimport React, { useContext } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport { UIContext } from 'src/store';\nimport UIStore from 'src/store/ui';\nimport Sidebar from '../components/Sidebar';\n\nconst SidebarContainer = () => {\n    const location = useLocation();\n    const history = useHistory();\n    const { t } = useTranslation(['general', 'routes']);\n    const uiStore = useContext<UIStore>(UIContext);\n    return <Sidebar location={location} history={history} t={t} collapse={uiStore.getSidebarCollapse}/>;\n};\nexport default observer(SidebarContainer);\n","import React, { ChangeEvent, useMemo } from 'react';\nimport {\n    FormControl,\n    FormControlLabel,\n    Radio,\n    RadioGroup,\n    Typography,\n    typographyClasses,\n} from '@mui/material';\nimport { styled } from '@mui/system';\n\nconst RowFormControl = styled(FormControl)(({ theme }) => ({\n    flexDirection: 'row',\n    marginHorizontal: '1rem',\n}));\nconst VCenterLabel = styled(Typography)(({ theme }) => ({\n    [`&.${typographyClasses.root}`]: {\n        alignSelf: 'center',\n        marginRight: '1rem !important',\n        color: theme.palette.text.primary,\n    },\n}));\n\ninterface RadioInputProps<OptionType> {\n    onChange: (e: ChangeEvent<HTMLInputElement>) => void;\n    title: string;\n    options: Array<{\n        value: OptionType;\n        translation: string;\n    }>;\n    value: OptionType;\n}\n\nexport default function RadioInput<OptionType>({\n    onChange,\n    options,\n    value,\n    title,\n}: RadioInputProps<OptionType>) {\n    const memoOptions = useMemo(\n        () =>\n            options.map((option, index) => (\n                <FormControlLabel\n                    value={option.value}\n                    control={\n                        <Radio\n                            color='secondary'\n                            checked={value === option.value}\n                        />\n                    }\n                    label={option.translation}\n                    key={`${value}-${index}`}\n                />\n            )),\n        [value, options]\n    );\n    return (\n        <RowFormControl>\n            <VCenterLabel>{title}</VCenterLabel>\n            <RadioGroup row aria-label={title} onChange={onChange}>\n                {memoOptions}\n            </RadioGroup>\n        </RowFormControl>\n    );\n}\n","import React from 'react';\nimport { RouteConfig } from 'react-router-config';\nimport Demo from 'src/containers/Demo';\nimport Home from 'src/containers/Home';\nimport BasicLayout from 'src/layouts/BasicLayout';\nimport HomeIcon from '@mui/icons-material/Home';\nimport SlideshowIcon from '@mui/icons-material/Slideshow';\n\nexport enum Routes {\n    Home = 'home',\n    Demo = 'demo',\n}\nexport const RouteKeyMap = {\n    [Routes.Home]: {\n        path: '/',\n        icon: ({ selected }: { selected: boolean }) => (\n            <HomeIcon\n                sx={{\n                    color: selected ? 'text.primary' : 'primary.contrastText',\n                    lineHeight: 1.43,\n                }}\n            />\n        ),\n    },\n    [Routes.Demo]: {\n        path: '/demo',\n        icon: ({ selected }: { selected: boolean }) => (\n            <SlideshowIcon\n                sx={{\n                    color: selected ? 'text.primary' : 'primary.contrastText',\n                    lineHeight: 1.43,\n                }}\n            />\n        ),\n    },\n};\nconst routeConfig: Array<RouteConfig> = [\n    {\n        component: BasicLayout,\n        routes: [\n            {\n                path: RouteKeyMap[Routes.Home].path,\n                exact: true,\n                key: Routes.Home,\n                component: Home,\n            },\n            {\n                path: RouteKeyMap[Routes.Demo].path,\n                exact: true,\n                key: Routes.Demo,\n                component: Demo,\n            },\n        ],\n    },\n];\nexport default routeConfig;\n","import { Switch, switchClasses } from '@mui/material';\nimport { styled } from '@mui/styles';\n\nexport default styled(Switch)(({ theme }) => ({\n    [`&.${switchClasses.root}`]: {\n        width: '4rem !important',\n    },\n    [`& .${switchClasses.switchBase}`]: {\n        height: '3rem',\n        paddingTop: '0 !important',\n    },\n}));\n","import { Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nexport default styled(Box)(({ theme }) => ({\n    width: '2rem',\n    height: '2rem',\n    borderRadius: '2rem',\n    background: theme.palette.primary.contrastText,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    zIndex: 2,\n}));\n","import React, { ChangeEvent, useRef, MouseEvent } from 'react';\nimport {\n    AppBar,\n    Grid,\n    IconButton,\n    Stack,\n    Toolbar,\n    toolbarClasses,\n    Typography,\n} from '@mui/material';\nimport { styled } from '@mui/styles';\nimport { TFunction } from 'react-i18next';\nimport Brightness3Icon from '@mui/icons-material/Brightness3';\nimport WbSunnyIcon from '@mui/icons-material/WbSunny';\nimport Locale from '../constants/locale';\nimport ThemeEnum from '../constants/theme';\nimport RadioInput from './RadioInput';\nimport StyledSwitch from './StyledSwitch';\nimport CircleBox from './CircleBox';\nimport ExpandLessIcon from '@mui/icons-material/ExpandLess';\n\nconst StyledAppbar = styled(AppBar)(({ theme }) => {\n    return {\n        minHeight: theme.dimension.header,\n        height: theme.dimension.header,\n    };\n});\nconst StyledToolbar = styled(Toolbar)(({ theme }) => ({\n    [`&.${toolbarClasses.root}`]: {\n        minHeight: `${theme.dimension.header} !important`,\n        height: theme.dimension.header,\n        display: 'flex',\n        justifyContent: 'space-between',\n        paddingLeft: '0 !important',\n    },\n}));\nconst WhiteThemeIcon = styled(WbSunnyIcon)(({ theme }) => ({\n    color: theme.palette.secondary.main,\n}));\n\ninterface HeaderProps {\n    locale: Locale;\n    theme: ThemeEnum;\n    sidebarCollapse: boolean;\n    t: TFunction;\n    handleLocaleChange: (e: ChangeEvent<HTMLInputElement>) => void;\n    handleThemeChange: (e: ChangeEvent<HTMLInputElement>) => void;\n    handleCollapseBtnClick: (e: MouseEvent<HTMLButtonElement>) => void;\n}\nconst Header = ({\n    t,\n    locale,\n    theme,\n    sidebarCollapse,\n    handleLocaleChange,\n    handleThemeChange,\n    handleCollapseBtnClick,\n}: HeaderProps) => {\n    const themeSwitchRef = useRef<HTMLInputElement>(null);\n    return (\n        <StyledAppbar position='static'>\n            <StyledToolbar>\n                <IconButton\n                    onClick={handleCollapseBtnClick}\n                    sx={{\n                        paddingLeft: 0,\n                    }}\n                >\n                    <ExpandLessIcon\n                        sx={{\n                            transformOrigin: 'center',\n                            transform: sidebarCollapse\n                                ? 'rotate(90deg)'\n                                : 'rotate(-90deg)',\n                            color: 'text.primary',\n                            marginLeft: '1rem',\n                        }}\n                    />\n                </IconButton>\n                <Grid\n                    direction='row'\n                    container\n                    item\n                    xs={9}\n                    justifyContent={'flex-end'}\n                >\n                    <RadioInput<Locale>\n                        onChange={handleLocaleChange}\n                        title={t<string>('general:locale')}\n                        options={Object.values(Locale).map((option) => ({\n                            value: option,\n                            translation: t<string>(`general:${option}`),\n                        }))}\n                        value={locale}\n                    />\n                    <Stack direction={'row'} spacing={1} alignItems={'center'}>\n                        <Typography>\n                            {t<string>(`general:${ThemeEnum.White}`)}\n                        </Typography>\n                        <StyledSwitch\n                            onChange={handleThemeChange}\n                            checked={theme === ThemeEnum.Dark}\n                            color='secondary'\n                            inputRef={themeSwitchRef}\n                            checkedIcon={\n                                <CircleBox\n                                    onClick={(\n                                        e: MouseEvent<HTMLDivElement>\n                                    ) => {\n                                        if (themeSwitchRef.current) {\n                                            themeSwitchRef.current.click();\n                                        }\n                                    }}\n                                >\n                                    <Brightness3Icon />\n                                </CircleBox>\n                            }\n                            icon={\n                                <CircleBox\n                                    onClick={(\n                                        e: MouseEvent<HTMLDivElement>\n                                    ) => {\n                                        if (themeSwitchRef.current) {\n                                            themeSwitchRef.current.click();\n                                        }\n                                    }}\n                                >\n                                    <WhiteThemeIcon />\n                                </CircleBox>\n                            }\n                        />\n                        <Typography>\n                            {t<string>(`general:${ThemeEnum.Dark}`)}\n                        </Typography>\n                    </Stack>\n                </Grid>\n            </StyledToolbar>\n        </StyledAppbar>\n    );\n};\nexport default Header;\n","import { observer } from 'mobx-react';\nimport React, { ChangeEvent, useCallback, useContext, MouseEvent } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Header from '../components/Header';\nimport Locale from '../constants/locale';\nimport LocalStorageKey from '../constants/localStorageKey';\nimport ThemeEnum from '../constants/theme';\nimport { UIContext } from '../store';\nimport UIStore from '../store/ui';\n\nconst HeaderContainer = () => {\n    const { t, i18n } = useTranslation(['general']);\n    const uiStore = useContext<UIStore>(UIContext);\n\n    const handleLocaleChange = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => {\n            i18n.changeLanguage(e.target.value);\n            localStorage.setItem(LocalStorageKey.Locale, e.target.value);\n            uiStore.setLocale(e.target.value as Locale);\n        },\n        [i18n, uiStore]\n    );\n    const handleThemeChange = useCallback(\n        (e: ChangeEvent<HTMLInputElement>) => {\n            localStorage.setItem(\n                LocalStorageKey.Theme,\n                e.target.checked ? ThemeEnum.Dark : ThemeEnum.White\n            );\n            uiStore.setTheme(\n                e.target.checked ? ThemeEnum.Dark : ThemeEnum.White\n            );\n        },\n        [uiStore]\n    );\n    const handleCollapseBtnClick = useCallback((e:MouseEvent<HTMLButtonElement>) => {\n        uiStore.setSidebarCollapse(!uiStore.getSidebarCollapse);\n    }, [uiStore])\n\n    return (\n        <Header\n            t={t}\n            locale={uiStore.getLocale}\n            theme={uiStore.getTheme}\n            sidebarCollapse={uiStore.getSidebarCollapse}\n            handleLocaleChange={handleLocaleChange}\n            handleThemeChange={handleThemeChange}\n            handleCollapseBtnClick={handleCollapseBtnClick}\n        />\n    );\n};\nexport default observer(HeaderContainer);\n","import { Grid } from '@mui/material';\nimport { styled } from '@mui/styles';\nimport React, { FunctionComponent } from 'react';\nimport Sidebar from '../containers/Sidebar';\nimport Header from '../containers/Header';\nimport { renderRoutes, RouteConfigComponentProps } from 'react-router-config';\n\nconst Background = styled(Grid)(({ theme }) => ({\n    background: theme.palette.background.default,\n    color: theme.palette.text.primary,\n    minHeight: 'max(8rem, 100vh)',\n    minWidth: '37.5rem',\n}));\nconst BasicLayout: FunctionComponent<RouteConfigComponentProps<{}>> = ({\n    route,\n}: RouteConfigComponentProps<{}>) => {\n    return (\n        <Background container direction='column'>\n            <Header />\n            <Grid\n                direction='row'\n                container\n                justifyContent={'flex-start'}\n                flexGrow={1}\n                flexWrap={'nowrap'}\n                sx={{\n                    minHeight: 'max(8rem, 100vh - 3rem)',\n                }}\n            >\n                <Grid item container xs={'auto'}>\n                    <Sidebar />\n                </Grid>\n                <Grid item flexGrow={1}>\n                    {route && renderRoutes(route.routes)}\n                </Grid>\n            </Grid>\n        </Background>\n    );\n};\nexport default BasicLayout;\n","import React, { useContext, useMemo } from 'react';\nimport './App.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createTheme, responsiveFontSizes } from '@mui/material';\nimport { ThemeProvider } from '@mui/styles';\nimport { ThemeProvider as SystemThemeProvider } from '@mui/material';\nimport UIStore from './store/ui';\nimport { observer } from 'mobx-react';\nimport Theme from './constants/theme';\nimport { UIContext } from './store';\nimport DarkTheme from './themes/dark';\nimport WhiteTheme from './themes/white';\nimport { renderRoutes } from 'react-router-config';\nimport routeConfig from './constants/route';\n\nfunction App() {\n    const uiStore = useContext<UIStore>(UIContext);\n    const theme = useMemo(\n        () =>\n            responsiveFontSizes(\n                createTheme(\n                    uiStore.getTheme === Theme.Dark ? DarkTheme : WhiteTheme\n                )\n            ),\n        [uiStore.getTheme]\n    );\n    return (\n        <SystemThemeProvider theme={theme}>\n            {/* theme for sx props */}\n            <ThemeProvider theme={theme}>\n                {/* theme for styled component */}\n                <BrowserRouter>{renderRoutes(routeConfig)}</BrowserRouter>\n            </ThemeProvider>\n        </SystemThemeProvider>\n    );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport Locale from '../constants/locale';\ni18n.use(Backend)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        fallbackLng: Locale.EN,\n        ns: ['general'],\n        defaultNS: 'general',\n        debug: true,\n        interpolation: {\n            escapeValue: false,\n        },\n        backend: {\n            loadPath: `${window.location.pathname}locales/{{lng}}/{{ns}}.json`,\n        },\n        supportedLngs: [Locale.EN, Locale.ZH],\n    });\nexport default i18n;\n","import React, { Suspense } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport UIStore from './store/ui';\nimport { UIContext } from './store';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './utils/i18n';\n\nReactDOM.render(\n    <React.StrictMode>\n        <UIContext.Provider value={new UIStore()}>\n            <Suspense fallback='loading'>\n                <I18nextProvider i18n={i18n}>\n                    <App />\n                </I18nextProvider>\n            </Suspense>\n        </UIContext.Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}